{"version":3,"sources":["App.js","index.js"],"names":["App","useState","workedHours","setWorkedHours","estimatedTime","setEstimatedTime","canvasRef","useRef","useEffect","newDate","Date","setHours","getHours","workTime","Math","floor","setMinutes","getMinutes","ceil","context","current","getContext","col","x","y","r","g","b","fillStyle","fillRect","R","t","cos","G","sin","B","run","window","requestAnimationFrame","date","className","class","ref","width","height","value","toLocaleTimeString","disabled","onChange","e","target","rootElement","document","getElementById","createRoot","render"],"mappings":"6MAGe,SAASA,IACtB,MAAsCC,mBAAS,GAAE,mBAA1CC,EAAW,KAAEC,EAAc,KAClC,EAA0CF,mBAAS,GAAE,mBAA9CG,EAAa,KAAEC,EAAgB,KAChCC,EAAYC,iBAAO,MACzBC,qBAAU,WACR,IAAIC,EAAU,IAAIC,KAClBD,EAAQE,SAASF,EAAQG,WAAaC,EAAWC,KAAKC,MAAMb,IAC5DO,EAAQO,WACNP,EAAQQ,aACNH,KAAKI,KAA+C,KAAzChB,EAAcY,KAAKC,MAAMb,MAGxCG,EAAiBI,EACnB,GAAG,CAACP,IAEJM,qBAAU,WACR,IACMW,EADSb,EAAUc,QACFC,WAAW,MAE9BC,EAAM,SAAUC,EAAGC,EAAGC,EAAGC,EAAGC,GAC9BR,EAAQS,UAAY,OAASH,EAAI,IAAMC,EAAI,IAAMC,EAAI,IACrDR,EAAQU,SAASN,EAAGC,EAAG,EAAG,EAC5B,EACIM,EAAI,SAAUP,EAAGC,EAAGO,GACtB,OAAOjB,KAAKC,MAAM,IAAM,GAAKD,KAAKkB,KAAKT,EAAIA,EAAIC,EAAIA,GAAK,IAAMO,GAChE,EACIE,EAAI,SAAUV,EAAGC,EAAGO,GACtB,OAAOjB,KAAKC,MACV,IACE,GACED,KAAKoB,KAAKX,EAAIA,EAAIT,KAAKkB,IAAID,EAAI,GAAKP,EAAIA,EAAIV,KAAKoB,IAAIH,EAAI,IAAM,KAEvE,EACII,EAAI,SAAUZ,EAAGC,EAAGO,GACtB,OAAOjB,KAAKC,MACV,IACE,GACED,KAAKoB,IACH,EAAIpB,KAAKoB,IAAIH,EAAI,KACbR,EAAI,MAAQA,EAAI,MAAQC,EAAI,MAAQA,EAAI,MAAQ,MAG9D,EACIO,EAAI,GAEE,SAANK,IACF,IAAK,IAAIb,EAAI,EAAGA,GAAK,GAAIA,IACvB,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACvBF,EAAIC,EAAGC,EAAGM,EAAEP,EAAGC,EAAGO,GAAIE,EAAEV,EAAGC,EAAGO,GAAII,EAAEZ,EAAGC,EAAGO,IAG9CA,GAAQ,IACRM,OAAOC,sBAAsBF,EAC/B,CAEAA,EACF,GAAG,IAEH,IAAMG,EAAO,IAAI7B,KACXG,EAAW,EAMjB,OACE,sBAAK2B,UAAU,MAAK,UAClB,oBAAIC,MAAM,aAAY,SAAC,gBACvB,wBAAQC,IAAKpC,EAAWkC,UAAU,SAASG,MAAO,GAAIC,OAAQ,KAC9D,sBAAKJ,UAAU,iBAAgB,UAC7B,0BAASA,UAAU,UAAS,UAC1B,gCAAO,iBACP,uBAAOK,MAAON,EAAKO,qBAAsBC,UAAQ,OAEnD,0BAASP,UAAU,UAAS,UAC1B,gCAAO,oBACP,uBAAOK,MAAK,UAAKhC,EAAQ,OAAOkC,UAAQ,OAE1C,0BAASP,UAAU,UAAS,UAC1B,gCAAO,0CACP,uBAAOK,MAAO3C,EAAa8C,SAnBJ,SAACC,GAC9B9C,EAAe8C,EAAEC,OAAOL,MAC1B,OAmBM,0BAASL,UAAU,UAAS,UAC1B,gCAAO,8CACP,uCAAQ,IAAI9B,KAAKN,GAAe0C,gCAK1C,CCvFA,IAAMK,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACvD,EAAG,M","file":"static/js/main.dbea98d9.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport default function App() {\n  const [workedHours, setWorkedHours] = useState(0);\n  const [estimatedTime, setEstimatedTime] = useState(0);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    let newDate = new Date();\n    newDate.setHours(newDate.getHours() + workTime - Math.floor(workedHours));\n    newDate.setMinutes(\n      newDate.getMinutes() -\n        Math.ceil((workedHours - Math.floor(workedHours)) * 100)\n    );\n\n    setEstimatedTime(newDate);\n  }, [workedHours]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    //Our first draw\n    var col = function (x, y, r, g, b) {\n      context.fillStyle = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n      context.fillRect(x, y, 1, 1);\n    };\n    var R = function (x, y, t) {\n      return Math.floor(192 + 64 * Math.cos((x * x - y * y) / 300 + t));\n    };\n    var G = function (x, y, t) {\n      return Math.floor(\n        192 +\n          64 *\n            Math.sin((x * x * Math.cos(t / 4) + y * y * Math.sin(t / 3)) / 300)\n      );\n    };\n    var B = function (x, y, t) {\n      return Math.floor(\n        192 +\n          64 *\n            Math.sin(\n              5 * Math.sin(t / 9) +\n                ((x - 100) * (x - 100) + (y - 100) * (y - 100)) / 1100\n            )\n      );\n    };\n    var t = 0;\n\n    var run = function () {\n      for (let x = 0; x <= 35; x++) {\n        for (let y = 0; y <= 35; y++) {\n          col(x, y, R(x, y, t), G(x, y, t), B(x, y, t));\n        }\n      }\n      t = t + 0.02;\n      window.requestAnimationFrame(run);\n    };\n\n    run();\n  }, []);\n\n  const date = new Date();\n  const workTime = 8;\n\n  const calculateEstimatedTime = (e) => {\n    setWorkedHours(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 class=\"hero-title\"> WORK TIME </h1>\n      <canvas ref={canvasRef} className=\"canvas\" width={32} height={32} />\n      <div className=\"flex-container\">\n        <section className=\"flexbox\">\n          <label>Current Time</label>\n          <input value={date.toLocaleTimeString()} disabled />\n        </section>\n        <section className=\"flexbox\">\n          <label>Total work time</label>\n          <input value={`${workTime}hrs`} disabled />\n        </section>\n        <section className=\"flexbox\">\n          <label>How many hours of work done (in hrs)?</label>\n          <input value={workedHours} onChange={calculateEstimatedTime} />\n        </section>\n        <section className=\"flexbox\">\n          <label>Estimated time when your work is finished</label>\n          <h1>{`${new Date(estimatedTime).toLocaleTimeString()}`}</h1>\n        </section>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}